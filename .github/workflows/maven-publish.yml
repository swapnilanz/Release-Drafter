# This workflow will build a package using Maven and then publish it to ANZ repository

name: Deploy Maven Artifact

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    # - name: Cache Maven packages
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2

    # - name: Decrypt Artifactory credentials for settings.xml
    #   id: decrypt_artifactory_credentials_settings_xml
    #   run: |
    #     gcloud kms decrypt --project='anz-x-services-platdev-fcf8c0' --keyring='developer-experience' --key='anz-x-services-platdev-fcf8c0_ghr-mulesoft-common-secrets' --ciphertext-file=app-config/credentials/artifactory/artifactory_release_creds.properties --plaintext-file=artifactory_release_creds_plain.properties --location='global'
    #     gcloud kms decrypt --project='anz-x-services-platdev-fcf8c0' --keyring='developer-experience' --key='anz-x-services-platdev-fcf8c0_ghr-mulesoft-common-secrets' --ciphertext-file=app-config/credentials/artifactory/artifactory_snapshot_creds.properties --plaintext-file=artifactory_snapshot_creds_plain.properties --location='global'
    #     source artifactory_release_creds_plain.properties
    #     source artifactory_snapshot_creds_plain.properties

    #     echo "::set-output name=release_user::${artifactory_release_user}"
    #     echo "::set-output name=snapshot_user::${artifactory_snapshot_user}"

    #     echo "::add-mask::${artifactory_release_token}"
    #     echo "::set-output name=release_token::${artifactory_release_token}"

    #     echo "::add-mask::${artifactory_snapshot_token}"
    #     echo "::set-output name=snapshot_token::${artifactory_snapshot_token}"

    # - name: Publish to ANZ repo
    #   run: |
    #     # cd main
    #     mvn clean package

  update_release_draft:
    runs-on: ubuntu-latest
    needs: ["Build"]
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: PR Labeler
on:
  pull_request:
    branches: [ master ]
jobs:
  pr-labeler:
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v3
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}